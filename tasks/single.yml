---

- name: set any variables
  ansible.builtin.include_vars:
    file: "{{ postgres_vars_dir }}/single.yml"
  tags: postgres_single_init,postgres_config

- name: init postgres
  block:
    - name: clean postgres data dir
      ansible.builtin.file:
        path: "{{ postgres_data_dir }}"
        state: absent
      tags: postgres_single_init
    - name: run initdb command by wrapper
      ansible.builtin.include_tasks: "{{ ansible_pkg_mgr }}-{{ postgres_install_mode }}-init.yml"
      tags: postgres_single_init
  when: postgres_init_force is defined and postgres_init_force | bool

- name: edit configs
  ansible.builtin.import_tasks: "postgres-config.yml"
  tags: postgres_config

- name: postgres start
  ansible.builtin.service:
    name: "{{ postgres_service_name }}"
    state: started
  notify: postgres enable
  tags: postgres_start

- name: create postgres system users
  become: true
  become_user: 'postgres'
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
  loop: "{{ postgres_init_users }}"
  when: postgres_init_users is defined and postgres_init_users | length > 0
  tags: postgres_system_user
