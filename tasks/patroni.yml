---
# Main config for patroni+any DCS cluster
# any DCS variables must be defined
- name: Set any variables
  ansible.builtin.include_vars:
    file: "{{ postgres_vars_dir }}/cluster.yml"
  tags: patroni,patroni_install,patroni_conf,patroni_init,patroni_ssh_keys,patroni_start

- name: Install patroni packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ patroni_packages }}"
  tags: patroni,patroni_install

- name: Check if config dir exists
  ansible.builtin.file:
    path: "{{ patroni_config_dir }}"
    owner: "{{ patroni_user }}"
    group: "{{ patroni_group }}"
    mode: "0700"
    state: directory
  tags: patroni,patroni_conf

- name: Copy config to target system
  ansible.builtin.template:
    src: "{{ postgres_templates_dir }}/patroni.yml.j2"
    dest: "{{ patroni_config_file }}"
    owner: "{{ patroni_user }}"
    group: "{{ patroni_group }}"
    mode: "0600"
  tags: patroni,patroni_conf

- name: Set patroni systemd unit file
  when: ansible_service_mgr == "systemd" and patroni_systemd_unit_template is defined and patroni_systemd_unit_template | length > 0
  tags: patroni,patroni_conf
  block:
    - name: Check if systemd unit files directrory exists
      ansible.builtin.file:
        path: "{{ common_systemd_unit_dir }}"
        state: "directory"
        mode: "0755"
    - name: Copy patroni systemd unit file into systemd unit files directory
      ansible.builtin.template:
        dest: "{{ common_systemd_unit_dir }}/patroni.service"
        src: "{{ patroni_systemd_unit_template }}"
        mode: "0644"
    - name: Systemd daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true

- name: Delete exists postgres data directory
  when: patroni_init_force is defined and patroni_init_force | bool
  tags: patroni,patroni_init
  block:
    - name: Stop postgresql service
      ansible.builtin.service:
        name: "{{ postgres_service_name }}"
        state: stopped
        enabled: false
    - name: Stop patroni service
      ansible.builtin.service:
        name: patroni
        state: stopped
    - name: Clean postgres data dir
      ansible.builtin.file:
        path: "{{ postgres_data_dir }}"
        state: absent

- name: Setup ssh keys on cluster nodes
  when: ssh_keys_create_force is defined and ssh_keys_create_force | bool
  tags: patroni,patroni_ssh_keys
  ansible.builtin.include_role:
    name: "mshurutov.common"
    tasks_from: "ssh-keys.yml"
#  ansible.builtin.import_tasks: "ssh-keys.yml"

- name: Start patroni on master
  ansible.builtin.service:
    name: patroni
    state: started
  when: ansible_fqdn == postgres_master_host
  tags: patroni_start

- name: Wait for master will be started
  ansible.builtin.wait_for:
    host: "{{ postgres_master_host }}"
    port: "{{ postgres_client_port }}"
    state: started
  tags: patroni,patroni_start

- name: Start other hosts of the cluster
  ansible.builtin.service:
    name: patroni
    state: started
  when: ansible_hostname != postgres_master_host
  tags: patroni,patroni_start
