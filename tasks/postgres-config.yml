---
# configure postgres
- name: Edit postgresql.conf
  ansible.builtin.lineinfile:
    path: "{{ postgres_conf_file }}"
    regexp: '^#?\s*{{ item.name }}[^#]*(\s+#.*)?$'
    line: '{{ item.name }} = {{ item.value }}\1'
    create: true
    state: present
    backrefs: yes
  loop: "{{ postgres_params }}"
  notify: postgres restart
  tags: postgres_config,postgresql_conf

- name: Check if installed version of pg_hba.conf exists
  ansible.builtin.stat:
    path: "{{ postgres_conf_dir }}/pg_hba.conf.install"
  register: pg_hba_conf_exist
  tags: postgres_config,pg_hba_conf

- name: Backup installed version of pg_hba.conf
  ansible.builtin.copy:
    dest: "{{ postgres_conf_dir }}/pg_hba.conf.install"
    src: "{{ postgres_conf_dir }}/pg_hba.conf"
    remote_src: true
  when: not pg_hba_conf_exist.stat.exists
  tags: postgres_config,pg_hba_conf

- name: Delete all presettings in pg_hba.conf
  ansible.builtin.lineinfile:
    path: "{{ postgres_conf_dir }}/pg_hba.conf"
    regexp: '^(local|host).*$'
    state: absent
  tags: postgres_config,pg_hba_conf

- name: Add prepared lines into pg_hba.conf
  ansible.builtin.lineinfile:
    path: "{{ postgres_conf_dir }}/pg_hba.conf"
    line: "{{ item }}"
    create: true
    state: present
    insertafter: EOF
  loop: "{{ postgres_pg_hba_lines }}"
  notify: postgres reload conf
  tags: postgres_config,pg_hba_conf
