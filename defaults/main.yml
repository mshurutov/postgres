---

# defaults file for postgres
# common variable for role
# role files and directories definition
postgres_templates_dir: "{{ role_path }}/templates"
postgres_vars_dir: "{{ role_path }}/vars"
postgres_files_dir: "{{ role_path }}/files"
# common postgres variables
postgres_major_version: 14
postgres_install_mode: "single"
# any packages
postgres_consul_agent_packages: "consul"
# files, directories and any names
postgres_home_dir: "/var/lib/postgresql"
postgres_pgpass_file: "{{ postgres_home_dir }}/.pgpass"
postgres_conf_dir: "/etc/postgresql/{{ postgres_major_version }}"
postgres_conf_file: "{{ postgres_conf_dir }}/postgresql.conf"
postgres_data_dir: "{{ postgres_home_dir }}/{{ postgres_major_version }}/data"
postgres_bin_dir: "/usr/lib64/postgresql-{{ postgres_major_version }}/bin"
postgres_service_name: "postgresql-{{ postgres_major_version }}"
postgres_recovery_conf: "postgresql.conf"
# Default system and instance users and its passwords. The passwords must be changed.
postgres_system_user: 'postgres'
postgres_own_user: "{{ postgres_system_user }}"
postgres_own_password: "postgresownpwd"
postgres_repl_user: 'repluser'
postgres_repl_password: 'replpwd'
postgres_rewind_user: 'rewinduser'
postgres_rewind_password: 'rewindpwd'
postgres_init_users: []
#- name: "{{ postgres_own_user }}"
#  password: "{{ postgres_own_password }}"
#- name: "{{ postgres_repl_user }}"
#  password: "{{ postgres_repl_password }}"
#  role_attr_flags: "REPLICATION"
#- name: "{{ postgres_rewind_user }}"
#  password: "{{ postgres_rewind_password }}"
# Parameters and options 
# System parameters
postgres_kernel_params_default: []
#  - { name: vm_swappiness, value: '5' }
postgres_password_encoding: "scram-sha-256"
postgres_init_options: "--encoding=UTF8 --data-checksums"
postgres_client_port: 5432
postgres_ports:
  - "{{ postgres_client_port }}"
postgres_backup_connstring: ''
postgres_params_default:
  - { name: listen_addresses, value: "'*'" }
  - { name: port, value: "{{ postgres_client_port }}" }
  - { name: max_connections, value: "100" }
  - { name: password_encryption, value: "{{ postgres_password_encoding }}"}
  - { name: lc_messages, value: "POSIX" }
  - { name: shared_buffers, value: "{{ (ansible_memtotal_mb/4096+1) | int }}GB" }
  - { name: work_mem, value: "16MB" }
  - { name: maintenance_work_mem, value: "1GB" }
  - { name: wal_level, value: "replica" }
  - { name: archive_mode, value: "on" }
  - { name: archive_command, value: "'/bin/true'" }
  - { name: max_wal_senders, value: "10" }
  - { name: max_replication_slots, value: "10" }
  - { name: hot_standby, value: "on" }
  - { name: max_logical_replication_workers, value: "5" }
  - { name: log_destination, value: "'stderr'" }
  - { name: logging_collector, value: "on" }
  - { name: log_directory, value: 'log' }
  - { name: log_file_mode, value: "0640" }
  - { name: log_min_duration_statement, value: "0" }
  - { name: log_duration, value: "on" }
  - { name: log_line_prefix, value: "'%t [%p]: user=%u,db=%d,app=%a,client=%h '" }
  - { name: log_statement, value: "all" }
  - { name: autovacuum_vacuum_scale_factor, value: "0.05" }
  - { name: autovacuum_vacuum_insert_scale_factor, value: "0.01" }
  - { name: autovacuum_analyze_scale_factor, value: "0.01" }
  - { name: shared_preload_libraries, value: "'pg_stat_statements'" }
  - { name: restart_after_crash, value: "false" }
# \t (tabulation character) is not enabled for use in YAML-configs, by example in config for patroni
postgres_pg_hba_lines:
  - local all         {{ postgres_own_user }}              peer
  - host  all         all      127.0.0.1/32 {{ postgres_password_encoding }}
  - host  all         all      ::1/128      {{ postgres_password_encoding }}
  - host  all         {{ postgres_own_user }} 0.0.0.0/0    reject
  - host  replication {{ postgres_repl_user }} samenet      {{ postgres_password_encoding }}
  - host  all         all      samenet      {{ postgres_password_encoding }}
postgres_hosts_group: "pg_hosts"
postgres_dcs_groups: "pg_dcs"
postgres_cluster_dcs: "etcd"

# distr dependent variables
# portage - gentoo linux
#postgres_service_name: "postgresql-{{ postgres_major_version }}"
#postgres_conf_dir: "/etc/postgresql/{{ postgres_major_version }}"
#postgres_home_dir: "/var/lib/postgresql"
#postgres_data_dir: "{{ postgres_portage_home_dir }}/{{ postgres_major_version }}/data"
#postgres_bin_dir: "/usr/lib64/postgresql-{{ postgres_major_version }}/bin"
portage_accept_keywords_file: "/etc/portage/package.accept_keywords/package.all"
postgres_portage_packages: "dev-db/postgresql:{{ postgres_major_version }}"
postgres_portage_confd:
  - regexp: '^PGDATA="/etc/postgresq.*'
    line: 'PGDATA="{{ postgres_conf_dir }}"'
  - regexp: '^PG_INITDB_OPTS=.*'
    line: 'PG_INITDB_OPTS="--encoding=UTF8 {{ postgres_init_options }}"'

# APT variables (Debian, [KLX]?Ubuntu, Mint, and other deb-based distros)
postgres_apt_cluster_name: "main"
#postgres_service_name: "postgresql"
#postgres_conf_dir: "/etc/postgresql/{{ postgres_major_version }}/main"
#postgres_home_dir: "/var/lib/postgresql"
#postgres_data_dir: "{{ postgres_home_dir }}/{{ postgres_major_version }}/{{ postgres_apt_cluster_name }}"
#postgres_bin_dir: "/usr/lib/postgresql/{{ postgres_major_version }}/bin"
postgres_apt_packages:
  - "postgresql-{{ postgres_major_version }}"
  - "postgresql-contrib"
  - "python3-psycopg2"
postgres_templates_apt_dir: "{{ postgres_templates_dir }}/apt"
patroni_apt_packages:
  - "patroni"
stolon_apt_repo_codename: "bullseye"
stolon_apt_repo: null
stolon_apt_packages:
  - "stolon"

# APT+RPM (Alt Linux)
patroni_apt_rpm_packages:
  - "patroni"

# YUM/DNF (RedHat, CentOS, Rocky, Oracle)
#postgres_service_name: "postgresql-{{ postgres_major_version }}"
#postgres_home_dir: "/var/lib/pgsql"
#postgres_data_dir: "{{ postgres_home_dir }}/{{ postgres_major_version }}/data"
#postgres_conf_dir: "{{ postgres_data_dir }}"
#postgres_bin_dir: "/usr/pgsql-{{ postgres_major_version }}/bin"
postgres_yum_packages:
 - "postgresql{{ postgres_major_version }}-server"
 - "postgresql{{ postgres_major_version }}-contrib"
 - "python3-psycopg2"
patroni_yum_packages:
 - "patroni-etcd"

# apt+rpm package manager of Alt Linux
postgres_apt_rpm_packages:
  - "postgresql{{ postgres_major_version }}-server"

# Cluster dependent variables
# dcs
etcd_client_port: "2379"
# patroni
patroni_packages:
- "patroni"
# patroni_systemd_unit_template:
# patroni_systemd_unit_dir:
patroni_scope_name: 'example'
patroni_user: "{{ postgres_system_user }}"
patroni_group: "{{ patroni_user }}"
patroni_config_dir: '/etc/patroni'
patroni_config_file: '{{ patroni_config_dir }}/patroni.yml'
patroni_restapi_port: 8008
patroni_ttl: 30
patroni_loop_wait: 10
patroni_retry_timeout: 10
#patroni_standby:
#  master: "127.0.0.1"
#  master_port: "{{ postgres_client_port }}"
#  slot_name: 'patroni'
patroni_maximum_lag_on_failover: 1048576
patroni_postgres_listen: "0.0.0.0:{{ postgres_client_port }}"
patroni_base_roles:
  - { job: 'superuser', name: '{{ postgres_own_user }}', password: '{{ postgres_own_password }}' }
  - { job: 'replication', name: '{{ postgres_repl_user }}', password: '{{ postgres_repl_password }}' }
  - { job: 'rewind', name: '{{ postgres_rewind_user }}', password: '{{ postgres_rewind_password }}' }

# stolon
stolon_cluster_name: 'postgres'
stolon_metrics_listen_address: '0.0.0.0:8080'
stolon_store_backend: 'etcdv3'
stolon_dcs_client_port: 2379
stolon_daemons_config_file: "/etc/default/stolon"
stolon_data_dir: "/var/lib/stolon"
stolon_own_pgpassfile: "{{ stolon_data_dir }}/.ownpass"
stolon_repl_pgpassfile: "{{ stolon_data_dir }}/.replpass"
stolon_daemons_common_options_default:
  - key: "cluster_name"
    value: "{{ stolon_cluster_name }}"
    comment: "# cluster name"
  - key: "log_level"
    value: "error"
    comment: "# debug, info (default by developer), warn or error (default by me)"
  - key: "store_backend"
    value: "etcdv3"
    comment: "# store backend type (etcdv2/etcd, etcdv3, consul or kubernetes)"
stolon_daemons_sentinel_options_default: []
stolon_daemons_keeper_options_default:
  - key: "data_dir"
    value: "{{ stolon_data_dir }}"
    comment: "# data directory"
  - key: "pg_bin_path"
    value: "{{ postgres_bin_dir }}"
    comment: |
      # absolute path to postgresql binaries. If empty they will be searched
      # in the current PATH
  - key: "pg_listen_address"
    value: "{{ common_ip4_default }}"
    comment: |-
      # postgresql instance listening address, local address used for the postgres
      # instance. For all network interface, you can set the value to '*'.
  - key: "pg_port"
    value: "{{ postgres_client_port }}"
    commet: |-
      # postgresql instance listening port (default "5432")
      # I set this option to 6432 because 5432 (default PG port)
      # will be listening by stolon proxy)
  - key: "pg_repl_auth_method"
    value: "{{ postgres_password_encoding }}"
    comment: "# postgres replication user auth method. Default is md5 (by developer)"
  - key: "pg_repl_passwordfile"
    value: "{{ stolon_repl_pgpassfile }}"
    comment: |-
      # postgres replication user password file. Only one of --pg-repl-password or
      # --pg-repl-passwordfile must be provided. Must be the same for all keepers.
  - key: "pg_repl_username"
    value: "{{ postgres_repl_user }}"
    comment: |-
      # postgres replication user name. Required. It'll be created on db
      # initialization. Must be the same for all keepers.
  - key: "pg_su_auth_method"
    value: "{{ postgres_password_encoding }}"
    comment: "# postgres superuser auth method. Default is md5."
  - key: "pg_su_passwordfile"
    value: "{{ stolon_own_pgpassfile }}"
    comment: |-
      # postgres superuser password. Only one of --pg-su-password or
      # --pg-su-passwordfile must be provided. Must be the same for all keepers.
stolon_daemons_proxy_options_default:
  - key: "listen_address"
    value: "{{ common_ip4_default }}"
    comment: "# proxy listening address (default \"127.0.0.1\" by developer, 'common_ip4_default' by me)"
  - key: "port"
    value: "5432"
    comment: "# proxy listening port (default \"5432\")"
stolon_init_params_default:
  - name: "initMode"
    value: "new"
#  - name: "existingConfig"
#    options:
#      - name: "keeperUID"
#        value: "must be defined"
  - name: "newConfig"
    options:
      - name: "locale"
        value: "ru_RU.UTF-8"
      - name: "encoding"
        value: "UTF-8"
      - name: "dataChecksums"
        value: "true"
#  - name: "pitrConfig"
#    options:
#      - name: "dataRestoreCommand"
#        value: "must be defined"
#      - name: "archiveRecoverySettings"
#        options:
#          - name: "restoreCommand"
#            value: "must be defined"
#      - name: "recoveryTargetSettings"
#        options:
#          - name: "recoveryTarget"
#            value: ""
#          - name: "recoveryTargetLsn"
#            value: ""
#          - name: "recoveryTargetName"
#            value: ""
#          - name: "recoveryTargetTime"
#            value: ""
#          - name: "recoveryTargetXid"
#            value: ""
#          - name: "recoveryTargetTimeline"
#            value: ""
#  - name: "standbyConfig"
#    options:
#      - name: "standbySettings"
#        options:
#          - name: "primaryConnInfo"
#            value: "must be defined"
#          - name: "primarySlotName"
#            value: ""
#          - name: "recoveryMinApplyDelay"
#            value: ""
#      - name: "archiveRecoverySettings"
#        options:
#          - name: "restoreCommand"
#            value: "/bin/true"
